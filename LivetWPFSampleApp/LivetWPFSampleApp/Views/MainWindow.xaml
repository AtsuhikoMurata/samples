<Window x:Class="LivetWPFSampleApp.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:LivetWPFSampleApp.Views"
        xmlns:vm="clr-namespace:LivetWPFSampleApp.ViewModels"
        Title="MainWindow" Height="350" Width="525">
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="DeleteConfirm">
            <l:ConfirmationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>
        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="EditWindowOpen">
            <l:TransitionInteractionMessageAction
                WindowType="{x:Type v:EditWindow}" Mode="Modal" />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding People}" IsReadOnly="True" Grid.Row="2" SelectedItem="{Binding SelectedPerson.Value}" SelectionMode="Single">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Name.Value}" Header="Name"/>
                <DataGridTextColumn Binding="{Binding Age.Value}" Header="Age"/>
            </DataGrid.Columns>
        </DataGrid>
        <Menu>
            <MenuItem Header="Edit" IsEnabled="{Binding EditEnabled.Value}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <l:LivetCallMethodAction MethodTarget="{Binding Mode=OneWay}" MethodName="Edit"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
            <MenuItem Header="Delete" IsEnabled="{Binding DeleteEnabled.Value}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <l:ConfirmationDialogInteractionMessageAction>
                            <l:DirectInteractionMessage CallbackMethodTarget="{Binding Mode=OneWay}" CallbackMethodName="Delete">
                                <l:ConfirmationMessage Button="OKCancel" Caption="確認" Text="削除してもいいですか" />
                            </l:DirectInteractionMessage>
                        </l:ConfirmationDialogInteractionMessageAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
        </Menu>
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Label Content="名前："/>
            <TextBox TextWrapping="Wrap" Text="{Binding InputPerson.Value.Name.Value, UpdateSourceTrigger=PropertyChanged}" Width="120"/>
            <Label Content="年齢："/>
            <TextBox TextWrapping="Wrap" Text="{Binding InputPerson.Value.Age.Value, UpdateSourceTrigger=PropertyChanged}" Width="120"/>
            <Button Content="追加" Width="75" IsEnabled="{Binding AddEnabled.Value}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <l:LivetCallMethodAction MethodName="Add" MethodTarget="{Binding Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </StackPanel>

    </Grid>
</Window>
